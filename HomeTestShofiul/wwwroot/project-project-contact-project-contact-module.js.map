{"version":3,"sources":["webpack:///./src/app/components/project/project-contact/project-contact.component.html","webpack:///./src/app/components/project/project-contact/project-contact.component.scss","webpack:///./src/app/components/project/project-contact/project-contact.component.ts","webpack:///./src/app/components/project/project-contact/project-contact.module.ts","webpack:///./src/app/models/ViewModel/ContactAdd.ts"],"names":[],"mappings":"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","file":"project-project-contact-project-contact-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <h2>Contact Manamgnet</h2>\\n                <a [routerLink]=\\\"['/projects']\\\" role=\\\"button\\\" class=\\\"btn btn-success right\\\">Project List</a>\\n            </div>\\n          </div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4 project-contact\\\" *ngFor=\\\"let project of projects; let i = index \\\">\\n                <div class=\\\"list-group project-contact-box\\\">\\n                    <a href=\\\"#\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start active\\\">\\n                      <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                        <h5 class=\\\"mb-1 project-contact-h5\\\">{{project.projectName}}</h5>\\n                        <button mdbBtn color=\\\"default\\\" rounded=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#basicExample\\\"\\n                          (click)=\\\" editContact($event, project); frame.show()\\\" mdbWavesEffect size=\\\"sm\\\"><i class=\\\"fas fa-user-plus\\\"></i></button>\\n                      </div>\\n                      <small>{{project.address}}</small>\\n                    </a>\\n                    <div class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\"\\n                    *ngFor=\\\"let contact of project.contacts; let j = index\\\">\\n                      <div class=\\\"d-flex w-100 justify-content-between\\\">\\n                        <p class=\\\"mb-1\\\">{{contact.name}}</p>\\n                        <small class=\\\"text-muted\\\">\\n                          <button type=\\\"button\\\" (click)=\\\"deleteContact($event, contact.id, project.id)\\\">\\n                            <i class=\\\"fas fa-backspace\\\"></i></button>\\n                          </small>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"i%3 == 0\\\" class=\\\"clearfix\\\"></div>\\n            </div>\\n        </div>\\n      </div>\\n      \\n      \\n      <div mdbModal #frame=\\\"mdbModal\\\" class=\\\"modal fade bottom\\\" id=\\\"frameModalTop\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n        aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\" id=\\\"contact-project-modal-container\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header text-center\\\">\\n              <h4 class=\\\"modal-title w-100 font-weight-bold\\\">{{project.projectName}} New Contact</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"frame.hide(); clearContacts()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n      \\n            <div class=\\\"row row-divided\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"addContactToProject(); frame.hide()\\\" novalidate>\\n                        <div class=\\\"modal-body mx-3\\\">\\n                            <div class=\\\"md-form mb-5\\\">\\n                              <i class=\\\"fas fa-user prefix grey-text\\\"></i>\\n                              <input type=\\\"text\\\" id=\\\"contact-name\\\" class=\\\"form-control validate\\\" formControlName=\\\"name\\\"\\n                                mdbInputDirective required>\\n                              <label data-error=\\\"wrong\\\" data-success=\\\"right\\\" for=\\\"orangeForm-name\\\">Name</label>\\n                            </div>\\n                            <div class=\\\"md-form mb-5\\\">\\n                              <i class=\\\"fas fa-envelope prefix grey-text\\\"></i>\\n                              <input type=\\\"text\\\" id=\\\"contact-address\\\" class=\\\"form-control validate\\\" formControlName=\\\"address\\\"\\n                                mdbInputDirective required>\\n                              <label data-error=\\\"wrong\\\" data-success=\\\"right\\\" for=\\\"orangeForm-email\\\">Address</label>\\n                            </div>\\n                    \\n                            <div class=\\\"md-form mb-4\\\">\\n                              <i class=\\\"fas fa-lock prefix grey-text\\\"></i>\\n                              <textarea type=\\\"text\\\" id=\\\"contact-details\\\" class=\\\"form-control validate\\\" formControlName=\\\"details\\\"\\n                                mdbInputDirective></textarea>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"modal-footer d-flex justify-content-center\\\">\\n                              <button mdbBtn color=\\\"deep-orange\\\" class=\\\"waves-light\\\" mdbWavesEffect>Sign up</button>\\n                            </div>\\n                    </form>\\n                </div>\\n                <div class=\\\"vertical-divider\\\">or</div>\\n                <div *ngIf=\\\"showMeModal==true\\\" class=\\\"col-md-6\\\">\\n                    <form class=\\\"text-center p-5\\\" id=\\\"add-contact-exist\\\" (ngSubmit)=\\\"addExistingContact(); frame.hide()\\\">\\n                        <!--Multi Select-->\\n      \\n                         <div class=\\\"form-group\\\" id=\\\"sh-multiselect\\\">\\n                             <select2  [data]=\\\"contacts\\\"\\n                                       [options]=\\\"options\\\"\\n                                       [value]=\\\"selectedContacts\\\"\\n                                       (valueChanged) = \\\"reInit($event)\\\"\\n                                     \\n                                       >\\n                             </select2>\\n                             <i class=\\\"fa fa-chevron-down\\\"></i>\\n                         </div>\\n                 \\n                         <button mdbBtn class=\\\"btn btn-info btn-block\\\" >Add From Exisitng</button>\\n                       </form>\\n                </div>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvamVjdC9wcm9qZWN0LWNvbnRhY3QvcHJvamVjdC1jb250YWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Project } from 'src/app/models/Project';\nimport { ProjectService } from 'src/app/services/project.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ContactAdd } from 'src/app/models/ViewModel/ContactAdd';\nimport { ContactService } from 'src/app/services/contact.service';\nimport { ContactView } from 'src/app/models/ViewModel/ContactView';\nimport { MultiSelect } from 'src/app/models/ViewModel/MultiSelect';\nimport { ProjectUpdate } from 'src/app/models/ViewModel/ProjectUpdate';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-project-contact',\n  templateUrl: './project-contact.component.html',\n  styleUrls: ['./project-contact.component.scss']\n})\nexport class ProjectContactComponent implements OnInit {\n  \n  public projects:Array<Project> = new Array<Project>();\n  public contact: ContactAdd = new ContactAdd();\n  public project: Project = new Project();\n  public projectUpdate: ProjectUpdate = new ProjectUpdate();\n  contactForm: FormGroup;\n  public options: Select2Options;\n  public contactList: Array<ContactView> = new Array<ContactView>();\n  public contacts: Array<MultiSelect>;\n  public selectedContacts: string[];\n  public showMeModal: boolean = false;\n  \n\n  constructor(\n    private _projectService: ProjectService,\n    private _contactService: ContactService,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    this.getAllProjects();\n    this.getAllContacts();\n    this.contactForm = this.createFormGroup();\n\n    this.options = {\n      multiple: true,\n      placeholder: 'Please Select Contacts'\n    }\n  }\n\n  createFormGroup() {\n    return new FormGroup({\n        name: new FormControl('', Validators.required),\n        address: new FormControl('', Validators.required),\n        details: new FormControl()\n    });\n  }\n\n  getAllProjects() {\n    this._projectService.getAllProjects().subscribe(\n        responseAllProjects => {\n            Object.assign(this.projects, responseAllProjects);\n        },\n        error => {\n            console.log(<any> error);\n        }\n    );\n  }\n\n  getAllContacts(){\n    this._contactService.getAllContacts().subscribe(\n      responseAllContacts => {\n          Object.assign(this.contactList, responseAllContacts);\n\n          this.contacts = this._contactService.CreateContactSelectList(this.contactList); \n          console.log(this.contacts);         \n      },\n      error => {\n          console.log(<any> error);\n\n          \n      }\n    );\n}\n\n\n  editContact($event, project: Project) {\n    this.showMeModal = true;\n    $event.preventDefault();\n    this.project = project;\n    this.prepareSelectedContacts();\n  }\n\n  addContactToProject(){\n    const result: ContactAdd = Object.assign({}, this.contactForm.value);\n    \n    this._projectService.addContactToProject(this.project.id, result).subscribe(\n      response => {\n        Object.assign(this.projects, response);\n        this.clearContacts();\n        \n      }, error => {\n        console.log(error);\n      }\n    )};\n\n    deleteContact($event, id, projectId) {\n      console.log(id);\n      this._contactService.deleteContact(id).subscribe(\n        response => {\n          this.projects.map(item => {\n              if(item.id == projectId) {\n                return item.contacts = item.contacts.filter(contact => contact.id != id);\n              }\n          });\n        }, error => {\n          console.log(error);\n        }\n      )\n    }\n\n  prepareSelectedContacts() {\n      var arr = [];\n      if(this.project.contacts.length > 0) {\n        for(const contact of this.project.contacts){\n          arr.push(contact.id.toString());\n        }\n      }\n      this.selectedContacts = arr;\n    }\n\n    clearContacts(){\n      this.showMeModal = false;\n      this.selectedContacts = [];\n      this.project = new Project();\n    }\n\n   reInit(data: {value: string[]}) {\n    Object.assign(this.projectUpdate, this.project);\n    this.projectUpdate.contactList = data.value;\n    console.log(this.project.contactList);\n  }\n\n  addExistingContact(){\n    this._projectService.updateProject(this.projectUpdate.id, this.projectUpdate).subscribe(\n      response => {\n          window.location.reload();\n        },\n        error => {\n          console.log(<any> error);\n        }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectContactComponent } from './project-contact.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { Select2Module } from 'ng2-select2';\n\nconst routes: Routes = [{\n  path: '',\n  data: {\n      title: 'Project contacts',\n      urls: [{title: 'Project Contacts', url: '/edit'}, { title: 'Project contacts'}]\n  },\n  component: ProjectContactComponent\n}];\n\n@NgModule({\n  declarations: [ProjectContactComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    MDBBootstrapModule,\n    Select2Module\n\n  ]\n})\nexport class ProjectContactModule { }\n","export class ContactAdd {\r\n    constructor(\r\n        public name: any = '',\r\n        public details: any = '',\r\n        public address: any = ''\r\n    ) {}\r\n}"],"sourceRoot":""}